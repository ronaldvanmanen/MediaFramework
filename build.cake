//////////////////////////////////////////////////////////////////////
// ADD-INS
//////////////////////////////////////////////////////////////////////

#addin nuget:?package=Cake.FileHelpers&version=6.1.3

//////////////////////////////////////////////////////////////////////
// TOOLS
//////////////////////////////////////////////////////////////////////

#tool dotnet:?package=GitVersion.Tool&version=5.10.3

//////////////////////////////////////////////////////////////////////
// USINGS
//////////////////////////////////////////////////////////////////////

using Cake.Common.IO.Paths;

//////////////////////////////////////////////////////////////////////
// VARIABLES
//////////////////////////////////////////////////////////////////////

var repoRoot = Directory(".");

var solution = repoRoot + File("MultimediaFramework.sln");

//////////////////////////////////////////////////////////////////////
// TASKS
//////////////////////////////////////////////////////////////////////

Task("Clean").Does(() => 
{
    DotNetClean(solution);
});

Task("Restore").Does(() =>
{
    DotNetRestore(solution, new DotNetRestoreSettings
    {
        Interactive = Argument("interactive", false)
    });
});

Task("Build").Does(() =>
{
    DotNetBuild(solution, new DotNetBuildSettings
    {
        Configuration = Argument<string>("configuration", null),
        NoRestore = true
    });
});

Task("Test").Does(() =>
{
    DotNetTest(solution, new DotNetTestSettings
    {
        Configuration = Argument<string>("configuration", null),
        Runtime = Argument<string>("runtime", null),
        NoBuild = true,
        NoRestore = true
    });
});

//////////////////////////////////////////////////////////////////////
// EXECUTION
//////////////////////////////////////////////////////////////////////

RunTarget(Argument<string>("target"));